Find median in a stream of integers

Given an input stream of n integers the task is to insert integers to stream and print the median of the new stream formed by each insertion of x to the stream.

Example

Flow in stream : 5, 15, 1, 3 
5 goes to stream --> median 5 (5)
15 goes to stream --> median 10 (5, 15)
1 goes to stream --> median 5 (5, 15, 1)
3 goes to stream --> median 4 (5, 15, 1, 3)

Input:
The first line of input contains an integer N denoting the no of elements of the stream. Then the next N lines contains integer x denoting the no to be inserted to the stream.

Output:
For each element added to the stream print the floor of the new median in a new line.

Constraints:
1<=N<=105 + 7
1<=x<=105 + 7

Example:
Input:
4
5
15
1 
3
Output:
5
10
5
4

Solution: Execution time(0.87)

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	 Scanner sc=new Scanner(System.in);
	 int T=sc.nextInt(); /* Number of element of stream */
	 ArrayList<Integer> ar=new ArrayList<Integer>();
	 for(int i=0;i<T;i++)
	 {
	     ar.add(sc.nextInt()); /* Adding element in stream */
	     Collections.sort(ar);
	     if((i+1)%2==0)  /* If even number of elements in stream */
	     { int x=(ar.get((i+1)/2))+ar.get((i-1)/2);
	       System.out.println(x/2);  
	     }
	     else /* If odd number of elements in stream */
	     System.out.println(ar.get((i+1)/2));
	     
	 }
	 
	 
	 }
}
